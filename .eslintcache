[{"/home/ole/react_practice/src/index.js":"1","/home/ole/react_practice/src/App.js":"2","/home/ole/react_practice/src/reportWebVitals.js":"3","/home/ole/react_practice/src/Components/Header.js":"4","/home/ole/react_practice/src/Components/Project.js":"5","/home/ole/react_practice/src/Components/Projects.js":"6","/home/ole/react_practice/src/Components/AddProject.js":"7","/home/ole/react_practice/src/Components/About.js":"8","/home/ole/react_practice/src/Components/MessageProject.js":"9"},{"size":592,"mtime":1612371691540,"results":"10","hashOfConfig":"11"},{"size":5464,"mtime":1612654604774,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1612218424115,"results":"13","hashOfConfig":"11"},{"size":688,"mtime":1612446310700,"results":"14","hashOfConfig":"11"},{"size":1934,"mtime":1612654167380,"results":"15","hashOfConfig":"11"},{"size":393,"mtime":1612654169588,"results":"16","hashOfConfig":"11"},{"size":1129,"mtime":1612382417784,"results":"17","hashOfConfig":"11"},{"size":467,"mtime":1612432089738,"results":"18","hashOfConfig":"11"},{"size":2833,"mtime":1612654164764,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1itak9d",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"/home/ole/react_practice/src/index.js",[],["40","41"],"/home/ole/react_practice/src/App.js",[],"/home/ole/react_practice/src/reportWebVitals.js",[],"/home/ole/react_practice/src/Components/Header.js",[],"/home/ole/react_practice/src/Components/Project.js",[],"/home/ole/react_practice/src/Components/Projects.js",[],"/home/ole/react_practice/src/Components/AddProject.js",[],"/home/ole/react_practice/src/Components/About.js",[],"/home/ole/react_practice/src/Components/MessageProject.js",["42"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useParams} from \"react-router-dom\";\n\nconst MessageProject = ({ updMessages, updMessageCounts,projects}) => {\n    \n    let { id } = useParams();\n    id = Number(id);\n    console.log(id);\n    const [isLoading, setIsLoading] = useState(true);\n    const [Project, setProject] = useState({});\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([]);\n\n    \n    useEffect(() => {\n        console.log(projects);\n       let projectToUpdate =  projects.filter(project => project.id === id);\n       console.log(\"updates\",projectToUpdate)\n       if(projectToUpdate.length){\n        projectToUpdate = projectToUpdate[0];\n        setProject(projectToUpdate);\n        console.log(projectToUpdate);\n        console.log(projectToUpdate.messages)\n        setMessages([...messages,projectToUpdate.messages])\n        console.log(messages);\n        setIsLoading(false);\n       }\n    \n\n        return () => {\n            console.log('Component will unmount!!');\n        }\n    },[id,projects]);\n\n  \n    const onSubmit = (e) => {\n        e.preventDefault();\n        // console.log(id)\n        // console.log(projects);\n        // let project = projects.filter(project => project.id === id);\n        // console.log(project)\n        // project = project[0];\n        // console.log(project);\n        // setProject(project)       \n        //  console.log(Project);\n\n        setMessages([...messages,message]);\n        // console.log(message);\n        // console.log(messages);\n        updMessages(id,message);\n        updMessageCounts(id);\n        setMessage(\"\");\n    }\n  \n   \n\n\n    return (\n      <>\n        {!isLoading && (\n          <>\n            <h1>{Project.name}</h1>\n            <p>{Project.deadline}</p>\n            <form className=\"form\" >\n                <div className=\"formControl\">\n                <textarea className=\"messageBox\"  placeholder='Add some notes on progress and challenges of the project' value={message} onChange={(e) => setMessage(e.target.value) }>\n                </textarea>\n                </div>\n                <div className=\"addMessageBtn\">\n                 <button className=\"messageBoxBtn\" type='submit' onClick={onSubmit}>Add</button>\n                </div>\n                \n                \n            </form>\n\n            <div>\n                {message}\n                {messages ?  messages.map((message,i) => (\n                    <ul className=\"message\" key={i}>\n                        <li className=\"messageHead\">Note {i + 1}</li>\n                        <li>{message}</li>\n                    </ul>\n                )) : 'No notes taken.'}\n            </div>\n            <Link className=\"link\" to=\"/\">Back to homepage</Link>\n          </>\n        )}\n      </>\n    );\n  };\n  \nexport default MessageProject;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":33,"column":7,"nodeType":"49","endLine":33,"endColumn":20,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [id, messages, projects]",{"range":"56","text":"57"},[1063,1076],"[id, messages, projects]"]